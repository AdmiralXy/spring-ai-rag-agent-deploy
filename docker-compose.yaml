services:
  spring-ai-postgres:
    image: pgvector/pgvector:pg17-trixie
    restart: always
    networks:
      - traefik-network
    ports:
      - "5435:5432"
    volumes:
      - ./storage/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ai
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ai" ]
      interval: 5s
      retries: 5

  ollama:
    image: ollama/ollama:0.12.0
    restart: always
    networks:
      - traefik-network
    ports:
      - "11434:11434"
    volumes:
      - ./storage/ollama:/root/.ollama
    deploy:
      resources:
        limits:
          memory: 6g
          cpus: "4.0"
    entrypoint: [ "/bin/sh", "-c" ]
    command: |
      "ollama serve & 
       sleep 3 && 
       ollama pull embeddinggemma:300m && 
       wait"

  spring-ai-rag-agent:
    image: ghcr.io/admiralxy/spring-ai-rag-agent:17993894033
    restart: always
    networks:
      - traefik-network
    depends_on:
      - spring-ai-postgres
      - ollama
    environment:
      DATABASE_URL: ${DATABASE_URL}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      OLLAMA_URL: ${OLLAMA_URL}
      AI_URL: ${AI_URL}
      AI_KEY: ${AI_KEY}
      AI_MODEL: ${AI_MODEL}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.spring-ai-rag-agent-http.rule=Host(`${APPLICATION_DOMAIN} && PathPrefix(`/api/agent`)`)'
      - 'traefik.http.routers.spring-ai-rag-agent-http.entrypoints=web'
      - 'traefik.http.routers.spring-ai-rag-agent.rule=Host(`${APPLICATION_DOMAIN} && PathPrefix(`/api/agent`)`)'
      - 'traefik.http.routers.spring-ai-rag-agent.entrypoints=websecure'
      - 'traefik.http.routers.spring-ai-rag-agent.tls.certresolver=myresolver'
      - 'traefik.http.services.backend-spring-ai-rag-agent.loadbalancer.server.port=8080'

  spring-ai-rag-agent-ui:
    image: ghcr.io/admiralxy/spring-ai-rag-agent-ui:1758825713
    restart: always
    networks:
      - traefik-network
    environment:
      NUXT_PUBLIC_API_BASE: ${APPLICATION_DOMAIN}/api/agent
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.spring-ai-rag-agent-ui-http.rule=Host(`${APPLICATION_DOMAIN}`)'
      - 'traefik.http.routers.spring-ai-rag-agent-ui-http.entrypoints=web'
      - 'traefik.http.routers.spring-ai-rag-agent-ui.rule=Host(`${APPLICATION_DOMAIN}`)'
      - 'traefik.http.routers.spring-ai-rag-agent-ui.entrypoints=websecure'
      - 'traefik.http.routers.spring-ai-rag-agent-ui.tls.certresolver=myresolver'
      - 'traefik.http.services.frontend-spring-ai-rag-agent-ui.loadbalancer.server.port=3000'

networks:
  traefik-network:
    external: true
